name: Phase 1 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache conda environment
      uses: actions/cache@v3
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ hashFiles('environment.yml') }}
    
    - name: Create conda environment
      run: |
        conda env create -f environment.yml
        conda activate contract-analysis
    
    - name: Install dependencies
      run: |
        conda activate contract-analysis
        pip install -r requirements.txt
    
    - name: Run linting
      run: |
        conda activate contract-analysis
        black --check src/ tests/
        flake8 src/ tests/ --max-line-length=88 --ignore=E203,W503
        mypy src/ --ignore-missing-imports
    
    - name: Run tests
      run: |
        conda activate contract-analysis
        pytest tests/ -v --cov=src --cov-report=xml --cov-report=html
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  data-validation:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Create conda environment
      run: |
        conda env create -f environment.yml
        conda activate contract-analysis
    
    - name: Install dependencies
      run: |
        conda activate contract-analysis
        pip install -r requirements.txt
    
    - name: Run data validation
      run: |
        conda activate contract-analysis
        python -m src.validation.run_checks
    
    - name: Run DVC pipeline
      run: |
        conda activate contract-analysis
        dvc repro data_processing
        dvc repro baseline_training

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security checks
      run: |
        # Check for hardcoded secrets
        if grep -r "sk-" . --exclude-dir=.git --exclude-dir=.dvc; then
          echo "‚ùå Found potential API keys!"
          exit 1
        fi
        
        # Check for large files
        find . -type f -size +50M -not -path "./.git/*" -not -path "./.dvc/*" | head -5
